/*------------------------------------*\
    #BUTTONS
\*------------------------------------*/

/**
 *
 * 1) Button or link that has functionality to it
 */
.c-btn {
	display: inline-block;
	text-align: center;
	line-height: 1;
	font-weight: bold;
	padding: rem-calc(20px) rem-calc(40px);	
	max-width: 100%;
	min-width: rem-calc(150px);
}

.c-btn__primary {
	background: $thistle;
	border: 0;

	&:hover,
	&:focus {
		background: $russian-violet;
		color: $thistle;
	}
}
	
.c-btn__secondary {
	border: none;
	outline: none;
	position: relative;
	z-index: 1;
	background: linear-gradient(to right, $thistle, $queen-pink);
	background: -webkit-linear-gradient(to right, $thistle, $queen-pink);

	&::before {
		content: "";
		position: absolute;
		left: 2px;
		right: 2px;
		top: 2px;
		bottom: 2px;
		background-color: $rich-black-fogra-29;
		z-index: -1;
		transition: 200ms
	}

	&::after {
		content: attr(data);
		background: linear-gradient(to right, $queen-pink, $thistle);
		background: -webkit-linear-gradient(to right, $queen-pink, $thistle);
		background-clip: text;
		-webkit-background-clip: text;
		color: $transparent;
		transition: 200ms
	}

	&:hover::before {
		opacity: 10%;
		top: 0px;
		right: 0px;
		bottom: 0px;
		left: 0px;
	}

	&:hover::after {
		color: $rich-black-fogra-29;
	}
}



	/*
 * Inner container wrapper
 * 1) Container is direct decendant of <button>, since there's
 *    a bug with applying flexbox directly to a <button>
 * 2) Only needs to be used for buttons containing both icons and text

&__inner {
		display: flex;
		align-items: center;
		justify-content: center;
	}
 */
/*
 * Button icon
 
.c-btn__icon {
	width: 1rem;
	height: 1rem;
	fill: $color-btn-primary;
	transition: fill $anim-fade-quick $anim-ease;
}*/